{"ast":null,"code":"import { MatSnackBarConfig } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nexport var SnackBarColorEnum = /*#__PURE__*/(() => {\n  (function (SnackBarColorEnum) {\n    SnackBarColorEnum[\"Green\"] = \"background-green\";\n    SnackBarColorEnum[\"Red\"] = \"background-red\";\n    SnackBarColorEnum[\"Blue\"] = \"background-blue\";\n    SnackBarColorEnum[\"Yellow\"] = \"background-yellow\";\n    SnackBarColorEnum[\"Default\"] = \"\";\n  })(SnackBarColorEnum || (SnackBarColorEnum = {}));\n\n  return SnackBarColorEnum;\n})();\nexport let NotificationUtils = /*#__PURE__*/(() => {\n  class NotificationUtils {\n    constructor(snackBar) {\n      this.snackBar = snackBar;\n    } // tslint:disable-next-line:typedef\n\n\n    showSnackBar(message, color = SnackBarColorEnum.Default, duration = 5000, verticalPosition = 'top', horizontalPosition = 'center') {\n      const config = new MatSnackBarConfig();\n      config.panelClass = color !== SnackBarColorEnum.Default ? color : [];\n      config.duration = duration;\n      config.verticalPosition = verticalPosition;\n      config.horizontalPosition = horizontalPosition;\n      this.snackBar.open(message, null, config);\n    }\n\n  }\n\n  NotificationUtils.ɵfac = function NotificationUtils_Factory(t) {\n    return new (t || NotificationUtils)(i0.ɵɵinject(i1.MatSnackBar));\n  };\n\n  NotificationUtils.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotificationUtils,\n    factory: NotificationUtils.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationUtils;\n})();","map":null,"metadata":{},"sourceType":"module"}