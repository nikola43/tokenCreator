{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { BnbTokenAddress } from '../../services/BnbTokenAbi';\nimport { faCheck, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { SnackBarColorEnum } from 'src/utils/NotificationUtil';\nimport { RemoveLiquidityDialogComponent } from '../remove-liquidity-dialog/remove-liquidity-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/web3.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/utils/NotificationUtil\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../../two-digit-decima-number.directive\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/slider\";\nimport * as i12 from \"@fortawesome/angular-fontawesome\";\nconst _c0 = [\"slider\"];\nconst _c1 = [\"addLiquidityBnbSlider\"];\nconst _c2 = [\"liquidityTokenAddress\"];\n\nfunction AddLiquidityComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This field required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddLiquidityComponent_mat_card_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 21);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelementStart(2, \"div\", 23);\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵelementStart(4, \"h5\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 24);\n    i0.ɵɵelementStart(7, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AddLiquidityComponent_mat_card_8_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.openRemoveLiquidityDialog();\n    });\n    i0.ɵɵtext(8, \"Remove\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"LP Token Balance \", ctx_r2.lpTokenBalance, \"\");\n  }\n}\n\nfunction AddLiquidityComponent_button_59_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n}\n\nfunction AddLiquidityComponent_button_59_fa_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 29);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r10.approveButtonIcon);\n  }\n}\n\nfunction AddLiquidityComponent_button_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AddLiquidityComponent_button_59_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.approveToken();\n    });\n    i0.ɵɵtemplate(1, AddLiquidityComponent_button_59_span_1_Template, 1, 0, \"span\", 20);\n    i0.ɵɵtemplate(2, AddLiquidityComponent_button_59_fa_icon_2_Template, 1, 1, \"fa-icon\", 27);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isApproving);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isAllowed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.approveButtonLabel, \" \");\n  }\n}\n\nfunction AddLiquidityComponent_span_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n}\n\nconst Web3 = require('web3');\n\nexport let AddLiquidityComponent = /*#__PURE__*/(() => {\n  class AddLiquidityComponent {\n    constructor(web3Service, formBuilder, notificationUtils, dialog) {\n      this.web3Service = web3Service;\n      this.formBuilder = formBuilder;\n      this.notificationUtils = notificationUtils;\n      this.dialog = dialog;\n      this.approveButtonLabel = 'Approve Token';\n      this.approveButtonIcon = faCheck;\n      this.tokenApproved = false;\n      this.isApproving = false;\n      this.isLoading = false;\n      this.isAllowed = false;\n      this.addBnbLiquidityQuantityPercent = 0;\n      this.addTokenLiquidityQuantityPercent = 0;\n      this.buttonLabel = 'Connect';\n      this.account = undefined;\n      this.addLiquidityForm = {\n        bnbAmount: 0,\n        tokenAmount: 0\n      };\n      this.createForm();\n      this.connectWeb3().then(r => {\n        console.log(r);\n      });\n\n      if (this.web3Service.enable) {\n        this.web3Service.getAccount().then(r => __awaiter(this, void 0, void 0, function* () {\n          this.account = r;\n          this.buttonLabel = r;\n          this.bnbBalance = Web3.utils.fromWei(yield this.web3Service.getBalance(), 'ether');\n        }));\n      }\n    }\n\n    ngOnInit() {} // tslint:disable-next-line:typedef\n\n\n    connectWeb3() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.web3Service.enableMetaMaskAccount().then(r => __awaiter(this, void 0, void 0, function* () {\n          console.log(r);\n\n          if ((r === null || r === void 0 ? void 0 : r.length) === 0) {\n            this.account = undefined;\n            this.buttonLabel = 'Connect';\n          } else {\n            this.account = r;\n            this.buttonLabel = r;\n            this.bnbBalance = Web3.utils.fromWei(yield this.web3Service.getBalance(), 'ether');\n          }\n        }));\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    addLiquidity() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const bnbAmount = this.addLiquidityForm.bnbAmount;\n        const tokenAmount = this.addLiquidityForm.tokenAmount;\n        const minTokenAmount = Number(Number(tokenAmount) - Number(this.percentage(Number(tokenAmount), 1)));\n        const minBnbTokenAmount = Number(Number(bnbAmount) - Number(this.percentage(Number(bnbAmount), 1)));\n        console.log({\n          bnbAmount,\n          tokenAmount,\n          minTokenAmount,\n          minBnbTokenAmount\n        });\n        const tokenAddress = this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value;\n        this.web3Service.addLiquidity(tokenAddress, bnbAmount, tokenAmount, minBnbTokenAmount, minTokenAmount).then(r2 => __awaiter(this, void 0, void 0, function* () {\n          this.tokenBalance = Number(Web3.utils.fromWei(yield this.getTokenBalance(tokenAddress), 'ether')).toFixed(8).toString();\n          this.bnbBalance = Number(Web3.utils.fromWei(yield this.web3Service.getBalance(), 'ether')).toFixed(8).toString();\n          this.lpTokenBalance = Number(Web3.utils.fromWei(yield this.getLPTokenBalance(tokenAddress), 'ether'));\n          /*\n          this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.setValue(\n            pairAddress\n          );\n          */\n\n          const value2 = this.mapValue(Number(0), 0, this.tokenBalance, 0, 100);\n          this.slider.value = value2;\n          this.addLiquidityForm.tokenAmount = 0;\n        })).catch(err => {\n          console.log(err);\n        });\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    mapValue(x, inMin, inMax, outMin, outMax) {\n      return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    } // tslint:disable-next-line:typedef\n\n\n    formatLabel(value) {\n      if (value >= 1000) {\n        return Math.round(value / 1000) + 'k';\n      }\n\n      return value + '%';\n    } // tslint:disable-next-line:typedef\n\n\n    tokenInputKeyUp() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(this.burnTokenAddressInputFormGroup.controls.burnTokenAddress);\n        const isValid = /^0x[a-fA-F0-9]{40}$/.test(this.burnTokenAddressInputFormGroup.controls.burnTokenAddress.value);\n\n        if (isValid) {\n          this.tokenBalance = Number(Web3.utils.fromWei(yield this.getTokenBalance(this.burnTokenAddressInputFormGroup.controls.burnTokenAddress.value), 'ether')).toFixed(8).toString();\n          console.log(this.isAllowed);\n        } else {\n          this.tokenBalance = 0;\n        }\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    approveToken() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isApproving = true;\n        this.approveButtonLabel = 'Approving';\n        const tokenAddress = this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value;\n        const bnbAmount = this.addLiquidityForm.bnbAmount.toString();\n        const tokenAmount = this.addLiquidityForm.tokenAmount.toString();\n        console.log({\n          tokenAddress\n        });\n        const routerAddress = this.web3Service.getRouterAddress();\n        yield this.web3Service.approveToken(tokenAddress, routerAddress, tokenAmount).then(r => {\n          if (r) {\n            this.isAllowed = true;\n            this.isApproving = false;\n            this.approveButtonLabel = 'Approved';\n          }\n        }).catch(err => {\n          console.log(err);\n          this.isAllowed = false;\n          this.isApproving = false;\n          this.approveButtonLabel = 'Not Approved';\n          this.approveButtonIcon = faExclamationTriangle;\n        });\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    setTokenPercent(percent) {\n      this.addLiquidityForm.tokenAmount = this.percentage(percent, this.tokenBalance);\n      const value = this.mapValue(Number(this.addLiquidityForm.tokenAmount), 0, this.tokenBalance, 0, 100);\n      this.slider.value = value;\n    } // tslint:disable-next-line:typedef\n\n\n    percentage(percent, total) {\n      return percent / 100 * total;\n    } // tslint:disable-next-line:typedef\n\n\n    setBnbPercent(percent) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.addLiquidityForm.bnbAmount = this.percentage(percent, this.bnbBalance);\n        const value = this.mapValue(Number(this.addLiquidityForm.bnbAmount), 0, this.bnbBalance, 0, 100);\n        this.addLiquidityBnbSlider.value = value;\n        const estimate = yield this.web3Service.getEstimatedTokensForBNB(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value);\n        const ratio = estimate['0'] / estimate['1'];\n        const addLiquidityTokenAmount = ratio * this.addLiquidityForm.bnbAmount;\n        console.log({\n          estimate\n        });\n        console.log({\n          ratio\n        });\n        console.log({\n          addLiquidityTokenAmount\n        });\n\n        if (!isNaN(Number(addLiquidityTokenAmount))) {\n          const value2 = this.mapValue(Number(addLiquidityTokenAmount), 0, this.tokenBalance, 0, 100);\n          this.slider.value = value2;\n          this.addLiquidityForm.tokenAmount = addLiquidityTokenAmount;\n        }\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    bnbInputKeyUp() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(this.addLiquidityForm.bnbAmount);\n        const estimate = yield this.web3Service.getEstimatedTokensForBNB(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value);\n        const ratio = estimate['0'] / estimate['1'];\n        const addLiquidityTokenAmount = ratio * this.addLiquidityForm.bnbAmount;\n        console.log({\n          estimate\n        });\n        console.log({\n          ratio\n        });\n        console.log({\n          addLiquidityTokenAmount\n        });\n        const value = this.mapValue(Number(this.addLiquidityForm.bnbAmount), 0, this.bnbBalance, 0, 100);\n        this.addLiquidityBnbSlider.value = value;\n\n        if (!isNaN(Number(addLiquidityTokenAmount))) {\n          const value2 = this.mapValue(Number(addLiquidityTokenAmount), 0, this.tokenBalance, 0, 100);\n          this.slider.value = value2;\n          this.addLiquidityForm.tokenAmount = addLiquidityTokenAmount;\n        }\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    onSlideToken(event) {\n      this.addTokenLiquidityQuantityPercent = Number(event.value);\n      this.addLiquidityForm.tokenAmount = this.mapValue(Number(event.value), 0, 100, 0, this.tokenBalance);\n    } // tslint:disable-next-line:typedef\n\n\n    onSlide(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.addBnbLiquidityQuantityPercent = Number(event.value);\n        this.addLiquidityForm.bnbAmount = this.mapValue(Number(event.value), 0, 100, 0, this.bnbBalance);\n        const estimate = yield this.web3Service.getEstimatedTokensForBNB(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value);\n        const ratio = estimate['0'] / estimate['1'];\n        const addLiquidityTokenAmount = ratio * this.addLiquidityForm.bnbAmount;\n\n        if (!isNaN(Number(addLiquidityTokenAmount))) {\n          const value2 = this.mapValue(Number(addLiquidityTokenAmount), 0, this.tokenBalance, 0, 100);\n          this.slider.value = value2;\n          this.addLiquidityForm.tokenAmount = addLiquidityTokenAmount;\n        }\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    getPair(address) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.web3Service.getPair(BnbTokenAddress, address);\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    onLiquidityTokenAddressKeyup() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const isValid = /^0x[a-fA-F0-9]{40}$/.test(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value);\n\n        if (isValid) {\n          this.tokenBalance = Number(Web3.utils.fromWei(yield this.getTokenBalance(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value), 'ether')).toFixed(8).toString();\n          this.lpTokenBalance = Number(Web3.utils.fromWei(yield this.getLPTokenBalance(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value), 'ether'));\n          this.isAllowed = yield this.web3Service.isAllowed(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value, this.web3Service.getRouterAddress());\n        } else {\n          this.tokenBalance = 0;\n        }\n      });\n    }\n\n    openRemoveLiquidityDialog() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const pairAddress = yield this.getPair(this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value);\n        const dialogRef = this.dialog.open(RemoveLiquidityDialogComponent, {\n          data: {\n            lpTokenBalance: this.lpTokenBalance,\n            address: this.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value,\n            pairAddress: pairAddress\n          }\n        });\n        dialogRef.afterClosed().subscribe(result => __awaiter(this, void 0, void 0, function* () {\n          if (result) {\n            this.notificationUtils.showSnackBar(`The LP token was removed successfully`, SnackBarColorEnum.Green);\n            this.tokenBalance = Number(Web3.utils.fromWei(yield this.getTokenBalance(this.burnTokenAddressInputFormGroup.controls.burnTokenAddress.value), 'ether')).toFixed(8).toString();\n            this.lpTokenBalance = Number(Web3.utils.fromWei(yield this.getLPTokenBalance(pairAddress), 'ether'));\n            this.bnbBalance = Web3.utils.fromWei(yield this.web3Service.getBalance(), 'ether');\n          }\n        }));\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    getTokenBalance(tokenAddress) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.web3Service.getTokensBalance(tokenAddress);\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    createForm() {\n      this.tokenAddressInputFormGroup = this.formBuilder.group({\n        liquidityTokenAddress: [null, [Validators.required, Validators.pattern('^0x[a-fA-F0-9]{40}$')]]\n      });\n      this.burnTokenAddressInputFormGroup = this.formBuilder.group({\n        burnTokenAddress: [null, [Validators.required, Validators.pattern('^0x[a-fA-F0-9]{40}$')]]\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    getLPTokenBalance(tokenAddress) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.web3Service.getLPTokensBalance(tokenAddress);\n      });\n    }\n\n    onClickEvent(e) {\n      this.tokenAddressInput.nativeElement.focus();\n      return this.checkValue(e, 'Please enter a valid token.');\n    }\n\n    checkValue(address, msg = 'The address is invalid.') {\n      try {\n        const isValid = /^0x[a-fA-F0-9]{40}$/.test(address);\n\n        if (!isValid) {\n          throw new Error(msg);\n        }\n\n        ;\n      } catch (e) {\n        this.notificationUtils.showSnackBar(msg, SnackBarColorEnum.Red);\n      }\n    }\n\n  }\n\n  AddLiquidityComponent.ɵfac = function AddLiquidityComponent_Factory(t) {\n    return new (t || AddLiquidityComponent)(i0.ɵɵdirectiveInject(i1.Web3Service), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.NotificationUtils), i0.ɵɵdirectiveInject(i4.MatDialog));\n  };\n\n  AddLiquidityComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddLiquidityComponent,\n    selectors: [[\"app-add-liquidity\"]],\n    viewQuery: function AddLiquidityComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slider = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addLiquidityBnbSlider = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tokenAddressInput = _t.first);\n      }\n    },\n    decls: 63,\n    vars: 17,\n    consts: [[1, \"liquidity-form-container\"], [1, \"form-container\", 3, \"formGroup\"], [\"appearance\", \"outline\", 2, \"width\", \"100% !important\"], [\"matInput\", \"\", \"maxlength\", \"42\", \"placeholder\", \"e.g. 0xB06a4327FF7dB3D82b51bbD692063E9a180b79D9\", \"formControlName\", \"liquidityTokenAddress\", 3, \"keyup\"], [\"liquidityTokenAddress\", \"\"], [4, \"ngIf\"], [\"class\", \"glassContainer\", 4, \"ngIf\"], [1, \"lock-liquidity-form-container\"], [1, \"input-label\"], [2, \"font-weight\", \"bold\", \"color\", \"white\"], [\"appTwoDigitDecimaNumber\", \"\", \"matInput\", \"\", \"maxlength\", \"8\", \"placeholder\", \"e.g. 1000\", 2, \"color\", \"white\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 1, \"percentButton\", 3, \"click\"], [2, \"width\", \"1rem\"], [\"min\", \"0\", \"step\", \"1\", \"thumbLabel\", \"\", \"max\", \"100\", 3, \"displayWith\", \"input\"], [\"addLiquidityBnbSlider\", \"\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [\"min\", \"0\", \"step\", \"1\", \"thumbLabel\", \"\", \"max\", \"100\", 3, \"disabled\", \"displayWith\", \"click\", \"input\"], [\"slider\", \"\"], [1, \"liquidity-form-buttons-container\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", \"style\", \"color: white\", 4, \"ngIf\"], [1, \"glassContainer\"], [1, \"container\"], [1, \"row\"], [1, \"col-sm\"], [2, \"color\", \"white\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 3, \"click\"], [3, \"icon\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\", 2, \"color\", \"white\"], [3, \"icon\"]],\n    template: function AddLiquidityComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Token address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 3, 4);\n        i0.ɵɵlistener(\"keyup\", function AddLiquidityComponent_Template_input_keyup_5_listener() {\n          return ctx.onLiquidityTokenAddressKeyup();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, AddLiquidityComponent_mat_error_7_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, AddLiquidityComponent_mat_card_8_Template, 9, 1, \"mat-card\", 6);\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"mat-card\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"span\", 9);\n        i0.ɵɵtext(13, \"BNB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"span\", 9);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵelementStart(18, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddLiquidityComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.addLiquidityForm.bnbAmount = $event;\n        })(\"keyup\", function AddLiquidityComponent_Template_input_keyup_18_listener() {\n          return ctx.bnbInputKeyUp();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_19_listener() {\n          return ctx.setBnbPercent(25);\n        });\n        i0.ɵɵtext(20, \" 25% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"div\", 12);\n        i0.ɵɵelementStart(22, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_22_listener() {\n          return ctx.setBnbPercent(50);\n        });\n        i0.ɵɵtext(23, \" 50% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"div\", 12);\n        i0.ɵɵelementStart(25, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_25_listener() {\n          return ctx.setBnbPercent(75);\n        });\n        i0.ɵɵtext(26, \" 75% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"div\", 12);\n        i0.ɵɵelementStart(28, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_28_listener() {\n          return ctx.setBnbPercent(100);\n        });\n        i0.ɵɵtext(29, \" 100% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementStart(31, \"mat-slider\", 13, 14);\n        i0.ɵɵlistener(\"input\", function AddLiquidityComponent_Template_mat_slider_input_31_listener($event) {\n          return ctx.onSlide($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"mat-card\", 7);\n        i0.ɵɵelementStart(35, \"div\", 8);\n        i0.ɵɵelementStart(36, \"span\", 9);\n        i0.ɵɵtext(37, \"TOKEN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"span\", 9);\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"br\");\n        i0.ɵɵelementStart(41, \"div\", 8);\n        i0.ɵɵelementStart(42, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddLiquidityComponent_Template_input_ngModelChange_42_listener($event) {\n          return ctx.addLiquidityForm.tokenAmount = $event;\n        })(\"keyup\", function AddLiquidityComponent_Template_input_keyup_42_listener() {\n          return ctx.tokenInputKeyUp();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_43_listener() {\n          return ctx.setTokenPercent(25);\n        });\n        i0.ɵɵtext(44, \" 25% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"div\", 12);\n        i0.ɵɵelementStart(46, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_46_listener() {\n          return ctx.setTokenPercent(50);\n        });\n        i0.ɵɵtext(47, \" 50% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(48, \"div\", 12);\n        i0.ɵɵelementStart(49, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_49_listener() {\n          return ctx.setTokenPercent(75);\n        });\n        i0.ɵɵtext(50, \" 75% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"div\", 12);\n        i0.ɵɵelementStart(52, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_52_listener() {\n          return ctx.setTokenPercent(100);\n        });\n        i0.ɵɵtext(53, \" 100% \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"br\");\n        i0.ɵɵelementStart(55, \"mat-slider\", 16, 17);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_mat_slider_click_55_listener() {\n          return ctx.onClickEvent(ctx.tokenAddressInputFormGroup.controls.liquidityTokenAddress.value);\n        })(\"input\", function AddLiquidityComponent_Template_mat_slider_input_55_listener($event) {\n          return ctx.onSlideToken($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(57, \"br\");\n        i0.ɵɵelementStart(58, \"div\", 18);\n        i0.ɵɵtemplate(59, AddLiquidityComponent_button_59_Template, 4, 3, \"button\", 19);\n        i0.ɵɵelementStart(60, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AddLiquidityComponent_Template_button_click_60_listener() {\n          return ctx.addLiquidity();\n        });\n        i0.ɵɵtemplate(61, AddLiquidityComponent_span_61_Template, 1, 0, \"span\", 20);\n        i0.ɵɵtext(62, \" Add Liquidity \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.tokenAddressInputFormGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.tokenAddressInputFormGroup.controls[\"liquidityTokenAddress\"].valid && ctx.tokenAddressInputFormGroup.controls[\"liquidityTokenAddress\"].touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.lpTokenBalance !== undefined);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.bnbBalance);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.addLiquidityForm.bnbAmount);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"displayWith\", ctx.formatLabel);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.tokenBalance);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.addLiquidityForm.tokenAmount);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.tokenBalance === undefined || ctx.tokenBalance === 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.tokenBalance === undefined || ctx.tokenBalance === 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.tokenBalance === undefined || ctx.tokenBalance === 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.tokenBalance === undefined || ctx.tokenBalance === 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.tokenAddressInputFormGroup.controls[\"liquidityTokenAddress\"].valid)(\"displayWith\", ctx.formatLabel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAllowed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.isAllowed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    directives: [i5.MatCard, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i2.DefaultValueAccessor, i2.MaxLengthValidator, i2.NgControlStatus, i2.FormControlName, i8.NgIf, i9.TwoDigitDecimaNumberDirective, i2.NgModel, i10.MatButton, i11.MatSlider, i6.MatError, i12.FaIconComponent],\n    styles: [\"[_nghost-%COMP%]     .mat-form-field-outline:not(:invalid){color:#fff}\"]\n  });\n  return AddLiquidityComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}