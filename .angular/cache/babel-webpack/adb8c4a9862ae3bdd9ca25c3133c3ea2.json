{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport Typewriter from 'typewriter-effect/dist/core';\nimport { faBurn, faLock, faCoins, faAtom, faBook, faFunnelDollar } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/web3.service\";\nimport * as i2 from \"@angular/cdk/layout\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"./components/network-selector/network-selector.component\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/list\";\nimport * as i8 from \"@angular/router\";\nimport * as i9 from \"@fortawesome/angular-fontawesome\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(web3Service, changeDetectorRef, media) {\n      this.web3Service = web3Service;\n      this.buttonLabel = 'Connect';\n      this.account = undefined;\n      this.selectedNetwork = 0;\n      this.faburn = faBurn;\n      this.falock = faLock;\n      this.facoins = faCoins;\n      this.faatom = faAtom;\n      this.fabook = faBook;\n      this.fadollar = faFunnelDollar;\n      this.mobileQuery = media.matchMedia('(max-width: 600px)');\n\n      this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n\n      this.mobileQuery.addListener(this._mobileQueryListener);\n      this.connectWeb3().then(r => {\n        console.log({\n          r\n        });\n\n        if (this.web3Service.enable) {\n          this.web3Service.getAccount().then(account => __awaiter(this, void 0, void 0, function* () {\n            console.log({\n              account\n            });\n            this.account = account;\n            this.buttonLabel = account.charAt(0) + '' + account.charAt(1) + '' + account.charAt(2) + '' + account.charAt(4) + account.charAt(5) + '' + account.charAt(6) + '...' + account.charAt(account.length - 4) + '' + account.charAt(account.length - 3) + '' + account.charAt(account.length - 2) + '' + account.charAt(account.length - 1);\n          }));\n        }\n      });\n      this.web3Service.web3.on('accountsChanged', accounts => {\n        console.log(accounts);\n\n        if (accounts.length === 0) {\n          this.account = undefined;\n          this.buttonLabel = 'Connect';\n        } else {\n          this.account = accounts[0];\n          this.buttonLabel = accounts[0].charAt(0) + '' + accounts[0].charAt(1) + '' + accounts[0].charAt(2) + '' + accounts[0].charAt(4) + accounts[0].charAt(5) + '' + accounts[0].charAt(6) + '...' + accounts[0].charAt(accounts[0].length - 4) + '' + accounts[0].charAt(accounts[0].length - 3) + '' + accounts[0].charAt(accounts[0].length - 2) + '' + accounts[0].charAt(accounts[0].length - 1);\n        }\n      });\n      this.web3Service.web3.on('networkChanged', data => {\n        console.log({\n          data\n        });\n\n        if (this.web3Service.enable) {\n          this.web3Service.getAccount().then(r => __awaiter(this, void 0, void 0, function* () {\n            console.log({\n              r\n            });\n            const accounts = [r];\n            this.account = accounts[0];\n            this.buttonLabel = accounts[0].charAt(0) + '' + accounts[0].charAt(1) + '' + accounts[0].charAt(2) + '' + accounts[0].charAt(4) + accounts[0].charAt(5) + '' + accounts[0].charAt(6) + '...' + accounts[0].charAt(accounts[0].length - 4) + '' + accounts[0].charAt(accounts[0].length - 3) + '' + accounts[0].charAt(accounts[0].length - 2) + '' + accounts[0].charAt(accounts[0].length - 1);\n          }));\n        }\n      });\n    }\n\n    ngOnInit() {\n      const t = new Typewriter('#typewriter', {\n        autoStart: true,\n        loop: true,\n        delay: 55\n      });\n      t.pauseFor(100).typeString('Welcome To Definitive <strong>Token Generation</strong> Platform.').pauseFor(2000).deleteAll().typeString('<strong>Create</strong> Your <strong>Own</strong> Token In <strong>Seconds</strong>.').pauseFor(2000).deleteAll().typeString('Available On <strong class=\"multiple\">Multiple</strong> Blockchains.').pauseFor(2000).deleteAll().typeString('Customize Tokenomics <strong>Easily</strong>.').pauseFor(2000).deleteAll().typeString('Smart Contract <strong><span style=\"color: #ff29ff;\">verification</span></strong>  <strong style=\"text-decoration: underline\">fully automated</strong>.').pauseFor(2000).deleteAll().typeString('<strong>Last</strong> Solidity Version <strong>(v0.8.10+commit.e5eed63a)</strong>.').pauseFor(2000).deleteAll().pauseFor(2000).start();\n    }\n\n    ngOnDestroy() {\n      this.mobileQuery.removeListener(this._mobileQueryListener);\n    } // tslint:disable-next-line:typedef\n\n\n    onNetworkChanged(event) {\n      console.log({\n        event\n      });\n      this.selectedNetwork = event;\n      this.web3Service.setNetworkId(this.selectedNetwork);\n    } // tslint:disable-next-line:typedef\n\n\n    connectWeb3() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.web3Service.enableMetaMaskAccount().then(account => __awaiter(this, void 0, void 0, function* () {\n          console.log({\n            account\n          });\n\n          if ((account === null || account === void 0 ? void 0 : account.length) === 0) {\n            this.account = undefined;\n            this.buttonLabel = 'Connect';\n          } else {\n            this.account = account;\n            this.buttonLabel = account.charAt(0) + '' + account.charAt(1) + '' + account.charAt(2) + '' + account.charAt(4) + account.charAt(5) + '' + account.charAt(6) + '...' + account.charAt(account.length - 4) + '' + account.charAt(account.length - 3) + '' + account.charAt(account.length - 2) + '' + account.charAt(account.length - 1);\n          }\n        }));\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Web3Service), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.MediaMatcher));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 43,\n    vars: 12,\n    consts: [[1, \"mat-custom-nav\"], [\"src\", \"assets/ORIGINAL.png\"], [1, \"mobile-hidden\"], [1, \"example-spacer\"], [3, \"selectedNetwork\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 1, \"connect-button\", 3, \"click\"], [1, \"example-sidenav-container\"], [\"fixedTopGap\", \"56\", 3, \"mode\", \"fixedInViewport\", \"opened\"], [\"snav\", \"\"], [\"mat-list-item\", \"\", \"routerLink\", \"/create-token\", \"routerLinkActive\", \"active\"], [3, \"icon\"], [\"mat-list-item\", \"\", \"routerLink\", \"/add-liquidity\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/lock-liquidity\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/burn-token\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"href\", \"javascript:void(0);\"], [1, \"soon-advise\"], [1, \"main-content\"], [1, \"container\"], [1, \"container\", \"mt-3\"], [1, \"row\", \"typewriter\", 2, \"text-align\", \"center\"], [1, \"col-sm\"], [\"id\", \"typewriter\", 2, \"color\", \"white\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n        i0.ɵɵelementStart(1, \"mat-toolbar-row\");\n        i0.ɵɵelementStart(2, \"span\");\n        i0.ɵɵelement(3, \"img\", 1);\n        i0.ɵɵelementStart(4, \"span\", 2);\n        i0.ɵɵtext(5, \" MIDAS Token Generator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"span\", 3);\n        i0.ɵɵelementStart(7, \"app-network-selector\", 4);\n        i0.ɵɵlistener(\"selectedNetwork\", function AppComponent_Template_app_network_selector_selectedNetwork_7_listener($event) {\n          return ctx.onNetworkChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.connectWeb3();\n        });\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-sidenav-container\", 6);\n        i0.ɵɵelementStart(11, \"mat-sidenav\", 7, 8);\n        i0.ɵɵelementStart(13, \"mat-nav-list\");\n        i0.ɵɵelementStart(14, \"a\", 9);\n        i0.ɵɵelement(15, \"fa-icon\", 10);\n        i0.ɵɵtext(16, \" Create Token\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 11);\n        i0.ɵɵelement(18, \"fa-icon\", 10);\n        i0.ɵɵtext(19, \" Add liquidity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"a\", 12);\n        i0.ɵɵelement(21, \"fa-icon\", 10);\n        i0.ɵɵtext(22, \" Lock Liquidity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"a\", 13);\n        i0.ɵɵelement(24, \"fa-icon\", 10);\n        i0.ɵɵtext(25, \" Burn Tokens\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"a\", 14);\n        i0.ɵɵelement(27, \"fa-icon\", 10);\n        i0.ɵɵtext(28, \" Whitelist \");\n        i0.ɵɵelementStart(29, \"span\", 15);\n        i0.ɵɵtext(30, \" SOON\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"a\", 14);\n        i0.ɵɵelement(32, \"fa-icon\", 10);\n        i0.ɵɵtext(33, \" Launchpad \");\n        i0.ɵɵelementStart(34, \"span\", 15);\n        i0.ɵɵtext(35, \" SOON\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-sidenav-content\", 16);\n        i0.ɵɵelementStart(37, \"div\", 17);\n        i0.ɵɵelementStart(38, \"div\", 18);\n        i0.ɵɵelementStart(39, \"div\", 19);\n        i0.ɵɵelementStart(40, \"div\", 20);\n        i0.ɵɵelement(41, \"h1\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate(ctx.buttonLabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"margin-top\", ctx.mobileQuery.matches ? 56 : 0, \"px\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mode\", ctx.mobileQuery.matches ? \"over\" : \"side\")(\"fixedInViewport\", ctx.mobileQuery.matches)(\"opened\", ctx.mobileQuery.matches ? false : true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"icon\", ctx.faatom);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"icon\", ctx.fadollar);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"icon\", ctx.falock);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"icon\", ctx.faburn);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"icon\", ctx.fabook);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"icon\", ctx.facoins);\n      }\n    },\n    directives: [i3.MatToolbar, i3.MatToolbarRow, i4.NetworkSelectorComponent, i5.MatButton, i6.MatSidenavContainer, i6.MatSidenav, i7.MatNavList, i7.MatListItem, i8.RouterLinkWithHref, i8.RouterLinkActive, i9.FaIconComponent, i6.MatSidenavContent, i8.RouterOutlet],\n    styles: [\"mat-sidenav[_ngcontent-%COMP%]{border-radius:16px!important;margin-left:1rem!important;margin-bottom:1rem!important}[_nghost-%COMP%]     input::placeholder{color:#fff!important}.example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}.connect-button[_ngcontent-%COMP%]{background:linear-gradient(0deg,#b23ece 0%,#ff15e5 100%);border-radius:15px;margin:0;width:150px;line-height:36px;overflow:visible;transform:translate(0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow .28s cubic-bezier(.4,0,.2,1);text-align:center;padding:.5rem 1rem;color:#fff}[_nghost-%COMP%]     .mat-toolbar{height:10vh;color:#fff}[_nghost-%COMP%]     .mat-toolbar-row{height:100%}fa-icon[_ngcontent-%COMP%]{margin-right:2vh}  .mat-tab-label{background:#ffffff!important;-webkit-background-clip:text!important;-webkit-text-fill-color:transparent!important;font-weight:bold;font-size:1.2rem}  .mat-tab-list .mat-tab-labels .mat-tab-label-active{background:linear-gradient(-45deg,#ee7752,#ff79ab,#47cfff,#23d5ab)!important;-webkit-background-clip:text!important;-webkit-text-fill-color:transparent!important;font-weight:bold;font-size:1.2rem}[_nghost-%COMP%]     .mat-ink-bar{background:linear-gradient(-45deg,#ee7752,#ff79ab,#47cfff,#23d5ab)!important}  .mat-tab-labels{background-color:#fff0}[_nghost-%COMP%]     .mat-card{color:#fff}.mat-sidenav-container[_ngcontent-%COMP%]{background-color:#fff0;height:90vh}mat-sidenav[_ngcontent-%COMP%]{background-color:#11192882;box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f;border-right:1px solid rgba(255,255,255,.125);width:14vw}[_nghost-%COMP%]     .mat-nav-list{min-height:50%;display:flex;flex-direction:column;justify-content:space-around}[_nghost-%COMP%]     .mat-list-item.active .mat-list-item-content{color:#ff29ff;border-bottom:1px solid white}[_nghost-%COMP%]     .mat-list-item-content{color:#fff;font-size:1.2rem}[_nghost-%COMP%]     .mat-list-item-content:hover{color:#ff29ff;background-color:#282727}[_nghost-%COMP%]     .mat-slider-track-background{background-color:#fff6}  .mat-form-field-label{color:#fff!important}  .mat-button-wrapper{color:#fff!important}[_nghost-%COMP%]     .soon-advise{margin-left:1vh;font-weight:900;color:red;font-size:.9rem;margin-top:.5vw}footer[_ngcontent-%COMP%]{position:absolute;width:100%}footer[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{padding:2vh}@media screen and (max-width: 512px){[_nghost-%COMP%]     .mat-tab-label{font-size:.9rem}[_nghost-%COMP%]     .mat-tab-header-pagination{background:rgba(255,255,255,.41);box-shadow:0 8px 32px #1f26875e;-webkit-backdrop-filter:blur(20px);backdrop-filter:blur(20px)}[_nghost-%COMP%]     .mat-toolbar-row .mat-focus-indicator{padding:0 8px;font-size:12px}[_nghost-%COMP%]     .lock-liquidity-form-container{min-height:250px;display:flex;justify-content:space-between}[_nghost-%COMP%]     .percentButton{width:20%}h3[_ngcontent-%COMP%]{font-size:1.2rem}.mobile-hidden[_ngcontent-%COMP%]{display:none}.typewriter[_ngcontent-%COMP%]{min-height:250px}}@media screen and (min-width: 769px){footer[_ngcontent-%COMP%]{bottom:0px}[_nghost-%COMP%]     .mat-slider-horizontal{width:80%;margin-left:10%}}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}