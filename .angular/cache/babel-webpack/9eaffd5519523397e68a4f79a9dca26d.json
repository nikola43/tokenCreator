{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { SnackBarColorEnum } from 'src/utils/NotificationUtil';\nimport { faLock, faLockOpen, faCheck, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/web3.service\";\nimport * as i3 from \"src/utils/NotificationUtil\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../two-digit-decima-number.directive\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/slider\";\nimport * as i11 from \"angular-emojis\";\nimport * as i12 from \"@mat-datetimepicker/core\";\nimport * as i13 from \"@fortawesome/angular-fontawesome\";\nimport * as i14 from \"../../../../projects/countdown-timer/src/lib/countdown-timer.component\";\nimport * as i15 from \"../../../utils/FromWei.pipe\";\nconst _c0 = [\"lockLiquidityTokenAddress\"];\n\nfunction LockLiquidityComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This field required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LockLiquidityComponent_button_33_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\n\nfunction LockLiquidityComponent_button_33_fa_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"fa-icon\", 26);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r8.approveButtonIcon);\n  }\n}\n\nfunction LockLiquidityComponent_button_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function LockLiquidityComponent_button_33_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.approveToken();\n    });\n    i0.ɵɵtemplate(1, LockLiquidityComponent_button_33_span_1_Template, 1, 0, \"span\", 21);\n    i0.ɵɵtemplate(2, LockLiquidityComponent_button_33_fa_icon_2_Template, 1, 1, \"fa-icon\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isApproving);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isAllowed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.approveButtonLabel, \" \");\n  }\n}\n\nfunction LockLiquidityComponent_angular_emojis_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"angular-emojis\", 12);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"name\", \"lock\");\n  }\n}\n\nfunction LockLiquidityComponent_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\n\nfunction LockLiquidityComponent_mat_card_38_mat_card_7_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelement(1, \"fa-icon\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const lock_r12 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r13.falock);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Unlocks \", i0.ɵɵpipeBind2(3, 2, lock_r12[3] * 1000, \"dd/MM/yyyy hh:mm\"), \" \");\n  }\n}\n\nfunction LockLiquidityComponent_mat_card_38_mat_card_7_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelement(1, \"fa-icon\", 26);\n    i0.ɵɵtext(2, \" Unlocked now! \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r14.falockopen);\n  }\n}\n\nfunction LockLiquidityComponent_mat_card_38_mat_card_7_ctimer_countdown_timer_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ctimer-countdown-timer\", 37);\n  }\n\n  if (rf & 2) {\n    const lock_r12 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"finishDateString\", lock_r12[3] * 1000);\n  }\n}\n\nfunction LockLiquidityComponent_mat_card_38_mat_card_7_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h6\");\n    i0.ɵɵtext(2, \"UNLOCKED!!!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Press withdraw to get your tokens.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LockLiquidityComponent_mat_card_38_mat_card_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 33);\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementStart(3, \"h5\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"fromWei\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, LockLiquidityComponent_mat_card_38_mat_card_7_p_6_Template, 4, 5, \"p\", 5);\n    i0.ɵɵtemplate(7, LockLiquidityComponent_mat_card_38_mat_card_7_p_7_Template, 3, 1, \"p\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵtemplate(9, LockLiquidityComponent_mat_card_38_mat_card_7_ctimer_countdown_timer_9_Template, 1, 1, \"ctimer-countdown-timer\", 35);\n    i0.ɵɵtemplate(10, LockLiquidityComponent_mat_card_38_mat_card_7_div_10_Template, 5, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function LockLiquidityComponent_mat_card_38_mat_card_7_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const lock_r12 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.withdraw(lock_r12[\"id\"]);\n    });\n    i0.ɵɵtext(12, \"Withdraw\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const lock_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"Locked \", i0.ɵɵpipeBind1(5, 6, lock_r12[2]), \" \", lock_r12[\"_tokenName\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.now < lock_r12[3] * 1000);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.now >= lock_r12[3] * 1000);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.now < lock_r12[3] * 1000);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.now >= lock_r12[3] * 1000);\n  }\n}\n\nfunction LockLiquidityComponent_mat_card_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 27);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵelementStart(2, \"div\", 29);\n    i0.ɵɵelementStart(3, \"div\", 30);\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵtext(5, \"My locks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"div\", 31);\n    i0.ɵɵtemplate(7, LockLiquidityComponent_mat_card_38_mat_card_7_Template, 13, 8, \"mat-card\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.myLocks);\n  }\n}\n\nconst Web3 = require('web3');\n\nexport let LockLiquidityComponent = /*#__PURE__*/(() => {\n  class LockLiquidityComponent {\n    constructor(formBuilder, web3Service, notificationUtils) {\n      this.formBuilder = formBuilder;\n      this.web3Service = web3Service;\n      this.notificationUtils = notificationUtils;\n      this.myLocks = [];\n      this.lockLiquidityForm = {\n        lpAmount: 0,\n        locktime: 0\n      };\n      this.falock = faLock;\n      this.falockopen = faLockOpen;\n      this.lockTokenLiquidityPercent = 0;\n      this.now = Date.now();\n      this.approveButtonLabel = 'Approve Token';\n      this.approveButtonIcon = faCheck;\n      this.tokenApproved = false;\n      this.isApproving = false;\n      this.isLoading = false;\n      this.isLocking = false;\n      this.isAllowed = false;\n      this.createForm();\n    } // tslint:disable-next-line:typedef\n\n\n    getTokenBalance(tokenAddress) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.web3Service.getTokensBalance(tokenAddress);\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    tokenInputKeyUp() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress);\n        const isValid = /^0x[a-fA-F0-9]{40}$/.test(this.lockLiquidityTokenAddressInputFormGroup.controls.burnTokenAddress.value);\n\n        if (isValid) {\n          this.tokenBalance = Number(Web3.utils.fromWei(yield this.getTokenBalance(this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value), 'ether')).toFixed(18).toString();\n          console.log(this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value);\n        } else {\n          this.tokenBalance = 0;\n        }\n      });\n    }\n\n    ngOnInit() {} // tslint:disable-next-line:typedef\n\n\n    formatLabel(value) {\n      if (value >= 1000) {\n        return Math.round(value / 1000) + 'k';\n      }\n\n      return value + '%';\n    } // tslint:disable-next-line:typedef\n\n\n    approveToken() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isApproving = true;\n        this.approveButtonLabel = 'Approving';\n        const tokenAddress = this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value;\n        const tokenAmount = this.lockLiquidityForm.lpAmount.toString();\n        const routerAddress = this.web3Service.getRouterAddress();\n        yield this.web3Service.approveToken(tokenAddress, routerAddress, tokenAmount).then(r => {\n          if (r) {\n            this.isAllowed = true;\n            this.isApproving = false;\n            this.approveButtonLabel = 'Approved';\n          }\n        }).catch(err => {\n          console.log(err);\n          this.isAllowed = false;\n          this.isApproving = false;\n          this.approveButtonLabel = 'Not Approved';\n          this.approveButtonIcon = faExclamationTriangle;\n        });\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    addEvent(type, event) {\n      this.lockLiquidityForm.locktime = event.value.getTime() / 1000; // const deadline = Math.floor(Date.now() / 1000) + 60 * 10;\n    } // tslint:disable-next-line:typedef\n\n\n    lockLiquidity(tokenAddress, time, tokenAmount) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isLocking = true;\n\n        try {\n          const r = yield this.web3Service.lockLiquidity(tokenAddress, time, tokenAmount);\n          this.notificationUtils.showSnackBar('Liquidity locked Successfully.', SnackBarColorEnum.Green);\n          this.isLocking = false;\n        } catch (e) {\n          this.notificationUtils.showSnackBar('Fail to lock liqquidity. Try again please', SnackBarColorEnum.Red);\n          this.isLocking = false;\n        }\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    mapValue(x, inMin, inMax, outMin, outMax) {\n      return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    } // tslint:disable-next-line:typedef\n\n\n    onSlideLockLP(event) {\n      this.lockTokenLiquidityPercent = Number(event.value);\n      this.lockLiquidityForm.lpAmount = this.mapValue(Number(event.value), 0, 100, 0, this.lpTokenBalance);\n    } // tslint:disable-next-line:typedef\n\n\n    createForm() {\n      this.lockLiquidityTokenAddressInputFormGroup = this.formBuilder.group({\n        lockLiquidityTokenAddress: [null, [Validators.required, Validators.pattern('^0x[a-fA-F0-9]{40}$')]]\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    getLPTokenBalance(tokenAddress) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.web3Service.getLPTokensBalance(tokenAddress);\n      });\n    } // tslint:disable-next-line:typedef\n\n\n    onLockLiquidityTokenAddressKeyup() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const isValid = /^0x[a-fA-F0-9]{40}$/.test(this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value);\n\n        if (isValid) {\n          this.lpTokenBalance = Number(Web3.utils.fromWei(yield this.getLPTokenBalance(this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value), 'ether')).toFixed(18).toString();\n          this.isAllowed = yield this.web3Service.isAllowed(this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value, this.web3Service.getRouterAddress());\n          /* Get my locks */\n\n          this.web3Service.getLocks().then(r => {\n            r.map(x => __awaiter(this, void 0, void 0, function* () {\n              return x._tokenName = yield this.getLPTokenName(this.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value);\n            }));\n            this.myLocks = r;\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          this.lpTokenBalance = 0;\n        }\n      });\n    }\n\n    getLPTokenName(tokenAddress) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let name = yield this.web3Service.getTokensName(tokenAddress);\n        name = name + ' - BNB LP';\n        return name;\n      });\n    }\n\n    onClickEvent(e) {\n      this.tokenAddressInput.nativeElement.focus();\n      return this.checkValue(e, 'Please enter a valid token.');\n    }\n\n    checkValue(address, msg = 'The address is invalid.') {\n      try {\n        const isValid = /^0x[a-fA-F0-9]{40}$/.test(address);\n\n        if (!isValid) {\n          throw new Error(msg);\n        }\n      } catch (e) {\n        this.notificationUtils.showSnackBar(msg, SnackBarColorEnum.Red);\n      }\n    }\n\n    withdraw(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const res = yield this.web3Service.withdrawLockedTokens(id);\n          this.notificationUtils.showSnackBar('Successful withdraw.', SnackBarColorEnum.Green);\n          return res;\n        } catch (e) {\n          this.notificationUtils.showSnackBar('Fail to withdraw. Wait until unlock.', SnackBarColorEnum.Red);\n        }\n      });\n    }\n\n  }\n\n  LockLiquidityComponent.ɵfac = function LockLiquidityComponent_Factory(t) {\n    return new (t || LockLiquidityComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Web3Service), i0.ɵɵdirectiveInject(i3.NotificationUtils));\n  };\n\n  LockLiquidityComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LockLiquidityComponent,\n    selectors: [[\"app-lock-liquidity\"]],\n    viewQuery: function LockLiquidityComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tokenAddressInput = _t.first);\n      }\n    },\n    decls: 39,\n    vars: 15,\n    consts: [[1, \"liquidity-form-container\"], [1, \"form-container\", 3, \"formGroup\"], [\"appearance\", \"outline\", 2, \"width\", \"100% !important\"], [\"matInput\", \"\", \"maxlength\", \"42\", \"placeholder\", \"e.g. 0xB06a4327FF7dB3D82b51bbD692063E9a180b79D9\", \"formControlName\", \"lockLiquidityTokenAddress\", 3, \"keyup\"], [\"lockLiquidityTokenAddress\", \"\"], [4, \"ngIf\"], [1, \"lock-liquidity-form-container\"], [1, \"input-label\"], [2, \"font-weight\", \"bold\"], [\"appTwoDigitDecimaNumber\", \"\", \"matInput\", \"\", \"maxlength\", \"18\", \"placeholder\", \"e.g. 1000\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\"], [\"min\", \"0\", \"step\", \"1\", \"thumbLabel\", \"\", \"max\", \"100\", 3, \"disabled\", \"displayWith\", \"click\", \"input\"], [\"size\", \"25\", 3, \"name\"], [\"matInput\", \"\", \"placeholder\", \"Lock until...\", 3, \"disabled\", \"matDatetimepicker\", \"dateInput\", \"dateChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"type\", \"datetime\", \"openOnFocus\", \"true\"], [\"picker\", \"\"], [1, \"liquidity-form-buttons-container\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [\"size\", \"25\", 3, \"name\", 4, \"ngIf\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", \"style\", \"color: white\", 4, \"ngIf\"], [\"class\", \"mt-4 mb-4 lock-liquidity-form-container\", 4, \"ngIf\"], [\"color\", \"primary\", \"type\", \"button\", \"mat-raised-button\", \"\", 3, \"click\"], [3, \"icon\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\", 2, \"color\", \"white\"], [3, \"icon\"], [1, \"mt-4\", \"mb-4\", \"lock-liquidity-form-container\"], [1, \"container\"], [1, \"row\"], [1, \"col-sm\"], [2, \"width\", \"15px\"], [\"class\", \"row lock-liquidity-form-container\", \"style\", \"margin-bottom: 15px\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"lock-liquidity-form-container\", 2, \"margin-bottom\", \"15px\"], [1, \"col-sm\", \"liquidity-locked\"], [3, \"finishDateString\", 4, \"ngIf\"], [\"color\", \"warn\", \"type\", \"button\", \"mat-raised-button\", \"\", 1, \"remove-lock-btn\", 3, \"click\"], [3, \"finishDateString\"]],\n    template: function LockLiquidityComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Token address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 3, 4);\n        i0.ɵɵlistener(\"keyup\", function LockLiquidityComponent_Template_input_keyup_5_listener() {\n          return ctx.onLockLiquidityTokenAddressKeyup();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, LockLiquidityComponent_mat_error_7_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-card\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11, \"TOKEN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"span\", 8);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵelementStart(15, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LockLiquidityComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.lockLiquidityForm.lpAmount = $event;\n        })(\"keyup\", function LockLiquidityComponent_Template_input_keyup_15_listener() {\n          return ctx.tokenInputKeyUp();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵtext(17, \" Max \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"mat-slider\", 11);\n        i0.ɵɵlistener(\"click\", function LockLiquidityComponent_Template_mat_slider_click_19_listener() {\n          return ctx.onClickEvent(ctx.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value);\n        })(\"input\", function LockLiquidityComponent_Template_mat_slider_input_19_listener($event) {\n          return ctx.onSlideLockLP($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"mat-card\", 6);\n        i0.ɵɵelementStart(22, \"div\", 7);\n        i0.ɵɵelementStart(23, \"span\", 8);\n        i0.ɵɵelement(24, \"angular-emojis\", 12);\n        i0.ɵɵtext(25, \" Timelock \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\");\n        i0.ɵɵelementStart(27, \"input\", 13);\n        i0.ɵɵlistener(\"dateInput\", function LockLiquidityComponent_Template_input_dateInput_27_listener($event) {\n          return ctx.addEvent(\"input\", $event);\n        })(\"dateChange\", function LockLiquidityComponent_Template_input_dateChange_27_listener($event) {\n          return ctx.addEvent(\"change\", $event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"mat-datetimepicker-toggle\", 14);\n        i0.ɵɵelement(29, \"mat-datetimepicker\", 15, 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"br\");\n        i0.ɵɵelementStart(32, \"div\", 17);\n        i0.ɵɵtemplate(33, LockLiquidityComponent_button_33_Template, 4, 3, \"button\", 18);\n        i0.ɵɵelementStart(34, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function LockLiquidityComponent_Template_button_click_34_listener() {\n          return ctx.lockLiquidity(ctx.lockLiquidityTokenAddressInputFormGroup.controls.lockLiquidityTokenAddress.value, ctx.lockLiquidityForm.locktime, ctx.lockLiquidityForm.lpAmount);\n        });\n        i0.ɵɵtemplate(35, LockLiquidityComponent_angular_emojis_35_Template, 1, 1, \"angular-emojis\", 20);\n        i0.ɵɵtemplate(36, LockLiquidityComponent_span_36_Template, 1, 0, \"span\", 21);\n        i0.ɵɵtext(37, \" Lock Liquidity \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(38, LockLiquidityComponent_mat_card_38_Template, 8, 1, \"mat-card\", 22);\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(30);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.lockLiquidityTokenAddressInputFormGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.lockLiquidityTokenAddressInputFormGroup.controls[\"lockLiquidityTokenAddress\"].valid && ctx.lockLiquidityTokenAddressInputFormGroup.controls[\"lockLiquidityTokenAddress\"].touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.lpTokenBalance);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.lockLiquidityForm.lpAmount);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.lockLiquidityTokenAddressInputFormGroup.controls[\"lockLiquidityTokenAddress\"].valid)(\"displayWith\", ctx.formatLabel);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"name\", \"clock1\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.lockLiquidityTokenAddressInputFormGroup.controls[\"lockLiquidityTokenAddress\"].valid)(\"matDatetimepicker\", _r2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r2);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAllowed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.isAllowed || ctx.isLocking);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLocking);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLocking);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.myLocks.length > 0);\n      }\n    },\n    directives: [i4.MatCard, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.MaxLengthValidator, i1.NgControlStatus, i1.FormControlName, i7.NgIf, i8.TwoDigitDecimaNumberDirective, i1.NgModel, i9.MatButton, i10.MatSlider, i11.AngularEmojisComponent, i12.MatDatetimepickerInput, i12.MatDatetimepickerToggle, i5.MatSuffix, i12.MatDatetimepicker, i5.MatError, i13.FaIconComponent, i7.NgForOf, i14.CountdownTimerComponent],\n    pipes: [i15.FromWeiPipe, i7.DatePipe],\n    styles: [\".liquidity-locked[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.remove-lock-btn[_ngcontent-%COMP%]{max-height:40px;margin-top:1.5%}[_nghost-%COMP%]     .mat-form-field-outline:not(:invalid){color:#fff}  .mat-datetimepicker-calendar-header-year,   .mat-datetimepicker-calendar-header-date,   .mat-datetimepicker-calendar-header-time{color:#000}\"]\n  });\n  return LockLiquidityComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}