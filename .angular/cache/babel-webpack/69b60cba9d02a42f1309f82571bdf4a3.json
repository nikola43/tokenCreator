{"ast":null,"code":"import { interval } from 'rxjs/internal/observable/interval';\nimport { map } from 'rxjs/internal/operators/map';\nimport * as i0 from \"@angular/core\";\nexport let CountdownTimerComponent = /*#__PURE__*/(() => {\n  class CountdownTimerComponent {\n    constructor() {\n      this.finishDateString = '';\n      this.finishDate = new Date();\n    }\n\n    ngOnInit() {\n      // Inicializamos el momento que falta hasta llegaral tiempo objetivo con valores en 0\n      this.time = {\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      }; // Creamos la fecha a partir de la fecha en formato string AAAA-MM-dd HH:mm:ss\n\n      this.finishDate = new Date(this.finishDateString);\n      let counterTimer$ = this.start().subscribe(_ => {\n        if (this.time.minutes <= 0 && this.time.seconds <= 0) {\n          this.time = {\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n            days: 0\n          };\n          counterTimer$.unsubscribe();\n        }\n      });\n    }\n\n    updateTime() {\n      const now = new Date();\n      const diff = this.finishDate.getTime() - now.getTime(); // Cálculos para sacar lo que resta hasta ese tiempo objetivo / final\n\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const mins = Math.floor(diff / (1000 * 60));\n      const secs = Math.floor(diff / 1000); // La diferencia que se asignará para mostrarlo en la pantalla\n\n      this.time.days = days;\n      this.time.hours = hours - days * 24;\n      this.time.minutes = mins - hours * 60;\n      this.time.seconds = secs - mins * 60;\n    } // Ejecutamos la acción cada segundo, para obtener la diferencia entre el momento actual y el objetivo\n\n\n    start() {\n      return interval(1000).pipe(map(x => {\n        this.updateTime();\n        return x;\n      }));\n    }\n\n  }\n\n  CountdownTimerComponent.ɵfac = function CountdownTimerComponent_Factory(t) {\n    return new (t || CountdownTimerComponent)();\n  };\n\n  CountdownTimerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountdownTimerComponent,\n    selectors: [[\"ctimer-countdown-timer\"]],\n    inputs: {\n      finishDateString: \"finishDateString\"\n    },\n    decls: 18,\n    vars: 4,\n    consts: [[\"id\", \"timer\"], [1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"0\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", 2, \"width\", \"82%\"], [1, \"count\"]],\n    template: function CountdownTimerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h6\");\n        i0.ɵɵtext(2, \"UNLOCK COUNTDOWN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelement(4, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementStart(7, \"span\");\n        i0.ɵɵtext(8, \"D\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9);\n        i0.ɵɵelementStart(10, \"span\");\n        i0.ɵɵtext(11, \"H\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12);\n        i0.ɵɵelementStart(13, \"span\");\n        i0.ɵɵtext(14, \"M\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15);\n        i0.ɵɵelementStart(16, \"span\");\n        i0.ɵɵtext(17, \"S\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.time.days, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" - \", ctx.time.hours, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" - \", ctx.time.minutes, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" - \", ctx.time.seconds, \"\");\n      }\n    },\n    styles: [\"#timer[_ngcontent-%COMP%]{font-size:1em;font-weight:700;color:gray;min-width:210px}#timer[_ngcontent-%COMP%]   div.count[_ngcontent-%COMP%]{display:inline-block;min-width:50px;padding:0 15px;border-radius:10px}\"]\n  });\n  return CountdownTimerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}